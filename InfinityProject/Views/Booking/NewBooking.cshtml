        @model InfinityProject.Models.BookingViewModels
        @using Microsoft.AspNet.Identity
        @using System.Security.Claims;

        @{
            ViewBag.Title = "Create New Booking";
        }

        <div class="jumbotron" height="294">
            <h2>
                @Html.ActionLink("Welcome: " + ClaimsPrincipal.Current.Claims.Where(c => c.Type == "Name").
               Select(c => c.Value).SingleOrDefault() + " " + ClaimsPrincipal.Current.Claims.Where(c => c.Type ==
               "Surname").Select(c => c.Value).SingleOrDefault() + "!", "Index", "Manage", routeValues: null, htmlAttributes:
               new { title = "Manage" })
        </h2>

        <p> please insert details to make a booking</p>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.cName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <!-- Enters the user name from the database instead of a http get request, add the at sign before
                        Html.EditorFor(model => model.cName, new { htmlAttributes = new { class = "form-control", readonly = "readonly", Value = ((Model == null) ? "Enter Name" : Model.cName.ToString()) } })-->
                        @Html.EditorFor(model => model.cName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cSurname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <!--
                        Html.EditorFor(model => model.cSurname, new { htmlAttributes = new { class = "form-control", readonly = "readonly", Value = ((Model == null) ? "Enter Surname" : Model.cSurname.ToString()) } })-->
                        @Html.EditorFor(model => model.cSurname, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.cSurname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TelNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TelNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Device, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Device, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Device, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }


        </div>
